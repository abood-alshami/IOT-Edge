version: '3.8'

services:
  # IoT Edge Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: iot-edge-backend
    container_name: iot-edge-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - redis
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_USER=iotedge
      - DB_PASSWORD=iotedge_password
      - DB_NAME=iotedge
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=local_development_secret
      - JWT_EXPIRES_IN=24h
    networks:
      - iot-network
    volumes:
      - ./:/app
      - /app/node_modules
    command: npm run dev
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database
  mysql:
    image: mysql:8.0
    container_name: iot-edge-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=iotedge
      - MYSQL_USER=iotedge
      - MYSQL_PASSWORD=iotedge_password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./schema_merged.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./sample_data.sql:/docker-entrypoint-initdb.d/02-sample-data.sql
    networks:
      - iot-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uiotedge", "-piotedge_password"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis for message queue and caching
  redis:
    image: redis:7-alpine
    container_name: iot-edge-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - iot-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysql-data:
  redis-data:

networks:
  iot-network:
    driver: bridge